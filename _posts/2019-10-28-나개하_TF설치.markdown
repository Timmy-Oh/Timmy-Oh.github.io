---
layout: post
title:  "[나도 개발이 하고 싶어] Tensorflow 2.0 GPU 설치하기"
date:   2019-10-28 02:21:00 +0900
categories: Tensorflow
---

Windows 10에서 Tensorflow 2.0 GPU 설치 Tip 입니다.

Tensorflow 공식 홈페이지의 Documentation이 워낙 잘되어 있어서 cpu버전이나 Linux의 경우 홈페이지를 참조하시는게 가장 정확합니다. 

하지만 저같은 경우는 윈도우에서 TF 2.0을 설치하는데 항상 어려움을 겪었는데 모두가 잘 아는 방식이지만 따로 공식 문서에 나와있지 않은 가장 간단한 방법을 설명드리려 합니다.

 

 

Tenosrflow 2.0 CPU버전의 경우 Python3만 있으면 됩니다.

하지만, GPU 버전을 설치하려면 Windows 10 기준 다음과 같은 Requirement들이 필요하다고 합니다.

H/W Requirements
NVIDIA® GPU card with CUDA® Compute Capability 3.5 or higher. See the list of CUDA-enabled GPU cards.
S/W Requirements
Python3 
NVIDIA® GPU drivers CUDA 10.0 requires 410.x or higher.
CUDA® Toolkit  TensorFlow supports CUDA 10.0 (TensorFlow >= 1.13.0)
CUPTI ships with the CUDA Toolkit.
uDNN SDK (>= 7.4.1)
(Optional)* TensorRT 5.0 to improve latency and throughput for inference on some models.
 

H/W

Compute Capability가 3.5 이상의 NVIDIA그래픽 카드가 장착되어 있으면 됩니다. 
S/W

[Python3] Anaconda3나 Minconda3를 Python 3.7의 64 bit버전으로 설치하시길 권장드립니다.
[NVIDIA GPU drivers] NVIDIA® GPU drivers 사이트에 접속해서 가지고 계신 GPU를 검색해서 (보통 자동으로 검색항목이 채워져서 Search만 클릭하시면 됩니다) 최신 Driver로 업데이트 해줍니다.
[CUDA Toolkit, CUPTI, cuDNN SDK] 원래는 하나하나 들어가서 버전에 맞춰서 설치를 해야하지만, 우리는 conda를 통해 TensorFlow 설치시 같이 설치하겠습니다.
[Tensor RT] Infrence용이라 꼭 필요하진 않으므로 설치하지 않겠습니다. 
 

[TensorFlow 설치] 

CMD창을 열고 다음 명령을 실행시킵니다.

conda install tensorflow-gpu
CPU버전은 $ conda install tensorflow

 

 

[설치 확인]

Install이 잘되었다면 Python 환경에서 Tensorflow를 실행시켜 보겠습니다.

>>> import tensorflow as tf

>>> print(tf.__version__)
2.0.0

>>> print(tf.reduce_sum(tf.random.normal([1000, 1000])))
2019-10-28 01:56:13.725177: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library nvcuda.dll
2019-10-28 01:56:13.857787: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties:
name: TITAN Xp major: 6 minor: 1 memoryClockRate(GHz): 1.582
pciBusID: 0000:07:00.0
2019-10-28 01:56:13.864674: I tensorflow/stream_executor/platform/default/dlopen_checker_stub.cc:25] GPU libraries are statically linked, skip dlopen check.
2019-10-28 01:56:13.871079: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2019-10-28 01:56:13.875415: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX AVX2
2019-10-28 01:56:13.883848: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1618] Found device 0 with properties:
name: TITAN Xp major: 6 minor: 1 memoryClockRate(GHz): 1.582
pciBusID: 0000:07:00.0
2019-10-28 01:56:13.890349: I tensorflow/stream_executor/platform/default/dlopen_checker_stub.cc:25] GPU libraries are statically linked, skip dlopen check.
2019-10-28 01:56:13.896042: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1746] Adding visible gpu devices: 0
2019-10-28 01:56:14.453225: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1159] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-10-28 01:56:14.458704: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1165]      0
2019-10-28 01:56:14.461876: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1178] 0:   N
2019-10-28 01:56:14.466246: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1304] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 9598 MB memory) -> physical GPU (device: 0, name: TITAN Xp, pci bus id: 0000:07:00.0, compute capability: 6.1)
tf.Tensor(529.188, shape=(), dtype=float32)
 

실행 결과를 통해 설치된 Tensorflow이 2.0.0 버전임을 알 수 있습니다.

실제 메모리 할당 진행시 GPU버전에서는 위와 같이 실제 GPU에 메모리가 할당되는 안내메시지를 볼 수 있습니다. (iPython 환경에서는 나오지 않습니다)

 

지금까지 윈도우에서 Tenosrflow 2.0 GPU버전 설치 가이드였습니다!

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
